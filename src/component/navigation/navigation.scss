@use '../../stylesheet/00_settings/color' as colors;
@use '../../stylesheet/00_settings/extra' as extras;
@use "../../stylesheet/01_tools/mixin" as mixins;
@use "../../stylesheet/01_tools/const" as const;

.nav {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 70%;
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 1000;
  box-shadow: extras.$shadow-top;
  border-radius: 1rem 1rem 0 0;
  margin-top: auto;
  transition: transform 0.4s ease-in-out 0.1s;
  background-color: map-get(colors.$material-color, white);
  padding-bottom: 0.8rem;

  @include mixins.media-query(map-get(const.$MEDIA-QUERY-TYPE, MIN-WIDTH), small) {
    position: static;
    width: 90px;
    height: 100%;
    box-shadow: extras.$shadow;
  }

  &--hidden {
    transform: translateY(100%);

    @include mixins.media-query(map-get(const.$MEDIA-QUERY-TYPE, MIN-WIDTH), small) {
      transform: none;
    }
  }

  &__shadow {
    display: flex;
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 999;
    transition: all 0.5s ease-in-out 0.4s;
    opacity: 1;
    background-color: rgba(0, 0, 0, 0.2);

    @include mixins.media-query(map-get(const.$MEDIA-QUERY-TYPE, MIN-WIDTH), small) {
      display: none;
    }

    &--hidden {
      display: none;
      opacity: 0;

      @include mixins.media-query(map-get(const.$MEDIA-QUERY-TYPE, MIN-WIDTH), small) {
        display: none;
      }
    }
  }
}

.action-bar {

  &__text {
    display: block;
    font-size: 1.2rem;
    font-weight: 500;

    @include mixins.media-query(map-get(const.$MEDIA-QUERY-TYPE, MIN-WIDTH), small) {
      display: none;
    }
  }

  &__menu {
    display: block;
    width: 70px;
    height: 100%;
    padding: 20px;

    @include mixins.media-query(map-get(const.$MEDIA-QUERY-TYPE, MIN-WIDTH), small) {
      display: none;
    }

  }
}